import pickle
import threading
import time
import tkinter as tk
from queue import Queue

import matplotlib.pyplot as plt
import numpy as np
import serial
from PIL import Image, ImageTk

from protocol import Protocol


class Desktop:
    SERVER_HOST = '192.168.56.1'
    SERVER_PORT = 5555

    def __init__(self):
        self.client_protocol = Protocol()
        self.client_protocol.connect((self.SERVER_HOST, self.SERVER_PORT))
        self.dofek = 0
        self.data_write = 100

        self.data_queue = Queue()
        self.init_gui()

    def init_gui(self):
        # Create the GUI window
        self.root = tk.Tk()
        self.root.title("Client GUI")
        self.root.geometry("800x600")  # Initial size

        # Load and display background image
        background_image = Image.open("webroot/images/beach_sunset.png")
        background_photo = ImageTk.PhotoImage(background_image)
        background_label = tk.Label(self.root, image=background_photo)
        background_label.place(x=0, y=0)

        # Create and place option menu
        self.option_var = tk.StringVar(self.root)
        self.option_var.set("Option 1")
        option_menu = tk.OptionMenu(self.root, self.option_var, "Option 1", "Option 2", "Option 3")
        option_menu.place(relx=0.1, rely=0.1)

        # Create and place submit button
        submit_button = tk.Button(self.root, text="Submit", command=self.button_click)
        submit_button.place(relx=0.1, rely=0.2)

    def send_option(self, option):
        self.client_protocol.send_msg(option.encode("utf-8"))

    def button_click(self):
        option = self.option_var.get()
        self.send_option(option)

    def arduino(self):
        try:
            serial_port = 'COM3'
            baud_rate = 9600
            ser = serial.Serial(serial_port, baud_rate, timeout=1)

            while True:
                response = ser.readline().decode('utf-8').strip()
                if response:
                    self.dofek = int(response) // 55.5 + 40
        except Exception as e:
            print(e)

    def mock_heartrate(self):
        heartrate = ['365', '369', '370', '365', '358', '351', '344', '340', '343', '345', '350', '357', '365', '369',
                     '370',
                     '365', '358', '351', '344', '340', '343', '345', '350', '357', '365', '369', '370', '365', '358',
                     '351',
                     '344', '340', '360', '352', '345', '340', '337', '336', '337', '338', '340', '342', '344', '345',
                     '346',
                     '346', '345', '344', '342', '341', '341', '341', '340', '340', '340', '340', '340', '341', '342',
                     '342',
                     '343', '342', '342', '342', '342', '342', '342', '342', '343', '343', '347', '352', '360', '367',
                     '369',
                     '366', '361', '353', '346', '341', '338', '336', '336', '338', '339', '343', '344', '346', '347',
                     '347',
                     '346', '344', '342', '341', '340', '339', '339', '339', '340', '340', '340', '342', '342', '342',
                     '343',
                     '343', '343', '343', '343', '342', '342', '342', '342', '344', '348', '354', '362', '368', '368',
                     '365',
                     '359', '351', '345', '340', '336', '335', '336', '338', '341', '343', '346', '347', '347', '347',
                     '345',
                     '344', '342', '341', '339', '339', '339', '339', '340', '340', '341', '342', '343', '343', '343',
                     '343',
                     '343', '343', '343', '343', '342', '342', '342', '345', '350', '357', '364', '368', '368', '364',
                     '357',
                     '349', '342', '338', '335', '334', '335', '338', '341', '344', '347', '349', '349', '348', '346',
                     '344',
                     '343', '341', '340', '340', '340', '339', '341', '342', '343', '343', '344', '343', '343', '343',
                     '344',
                     '344', '344', '348', '355', '362', '367', '369', '365', '360', '352', '344', '339', '335', '334',
                     '335',
                     '337', '340', '343', '346', '349', '349', '348', '346', '344', '342', '340', '339', '339', '338',
                     '340',
                     '340', '341', '342', '343', '344', '343', '344', '344', '344', '342', '344', '349', '356', '364',
                     '368',
                     '368', '364', '357', '350', '343', '338', '336', '335', '337', '338', '341', '344', '346', '347',
                     '347',
                     '347', '346', '344', '343', '341', '341', '340', '340', '340', '341', '341', '341', '343', '343',
                     '344',
                     '343', '344', '343', '343', '343', '345', '350', '357', '364', '367', '367', '362', '356', '349',
                     '342',
                     '339', '336', '336', '337', '340', '342', '344', '346', '347', '347', '346', '345', '343', '342',
                     '341',
                     '340', '339', '340', '340', '341', '341', '342', '343', '343', '344', '343', '343', '343', '343',
                     '342',
                     '342', '343', '347', '352', '359', '365', '368', '366', '361', '354', '348', '342', '338', '336',
                     '336',
                     '338', '340', '344', '346', '348', '349', '349', '347', '344', '342', '341', '340', '339', '341',
                     '341',
                     '341', '343', '344', '344', '343', '344', '343', '343', '343', '343', '342', '343', '345', '350',
                     '358',
                     '365', '368', '367', '362', '354', '347', '342', '338', '337', '337', '339', '340', '343', '345',
                     '346',
                     '347', '346', '346', '344', '342', '341', '341', '340', '340', '340', '341', '341', '342', '342',
                     '343',
                     '343', '343', '343', '343', '343', '343', '343', '342', '343', '346', '353', '360', '365', '367',
                     '366',
                     '359', '352', '344', '339', '336', '335', '336', '338', '341', '343', '345', '346', '347', '347',
                     '346',
                     '345', '342', '340', '340', '339', '340', '340', '341', '341', '342', '342', '342', '343', '344',
                     '343',
                     '343', '343', '343', '343', '343', '342', '343', '345', '351', '358', '364', '366', '364', '360',
                     '353',
                     '346', '341', '337', '335', '335', '337', '340', '343', '345', '347', '348', '348', '345', '344',
                     '342',
                     '340', '339', '339', '339', '340', '341', '341', '342', '342', '343', '343', '343', '343', '343',
                     '343',
                     '343', '343', '343', '342', '345', '350', '356', '362', '365', '364', '361', '355', '348', '341',
                     '338',
                     '335', '335', '336', '339', '342', '345', '347', '348', '347', '347', '344', '342', '341', '340',
                     '340',
                     '339', '340', '341', '341', '342', '342', '342', '343', '343', '343', '343', '343', '343', '343',
                     '344',
                     '349', '354', '360', '365', '365', '362', '357', '352', '345', '341', '339', '337', '338', '340',
                     '342',
                     '344', '345', '346', '346', '345', '344', '344', '342', '341', '340', '340', '340', '340', '341',
                     '341',
                     '341', '342', '342', '343', '343', '343', '343', '343', '343', '343', '343', '345', '348', '353',
                     '359',
                     '363', '364', '361', '356', '352', '346', '342', '340', '339', '339', '340', '342', '344', '344',
                     '345',
                     '346', '345', '344', '343', '342', '341', '341', '340', '341', '341', '341', '342', '342', '342',
                     '342',
                     '343', '343', '343', '343', '343', '342', '342', '342', '343', '345', '348', '352', '357', '358',
                     '358',
                     '356', '351', '347', '344', '341', '340', '340', '340', '341', '343', '344', '345', '346', '345',
                     '345',
                     '344', '342', '342', '341', '342', '341', '340', '341', '341', '342', '342', '342', '342', '344',
                     '343',
                     '343', '343', '342', '343', '343', '344', '347', '351', '354', '357', '357', '355', '352', '349',
                     '346',
                     '343', '342', '342', '342', '342', '343', '344', '345', '345', '345', '345', '344', '344', '343',
                     '342',
                     '342', '342', '342', '342', '342', '342', '343', '343', '343', '343', '344', '344', '344', '344',
                     '344',
                     '343', '343', '343', '343', '344', '347', '351', '354', '358', '359', '358', '356', '352', '349',
                     '346',
                     '344', '344', '344', '344', '345', '346', '346', '346', '346', '346', '344', '344', '343', '342',
                     '342',
                     '343', '342', '342', '343', '343', '343', '343', '344', '344', '344', '344', '343', '343', '343',
                     '343',
                     '343', '344', '343', '343', '343', '344', '346', '351', '357', '364', '367', '367', '364', '358',
                     '352',
                     '347', '342', '340', '339', '340', '341', '342', '344', '346', '346', '346', '346', '345', '343',
                     '341',
                     '341', '341', '340', '341', '341', '341', '342', '342', '343', '343', '343', '343', '344', '343',
                     '343',
                     '342', '342', '343', '342', '342', '342', '343', '345', '350', '356', '363', '369', '370', '366',
                     '360',
                     '351', '346', '342', '338', '337', '338', '339', '342', '344', '346', '348', '348', '347', '346',
                     '344',
                     '342', '341', '340', '340', '341', '341', '342', '342', '342', '343', '342', '343', '343', '343',
                     '342',
                     '343', '343', '342', '342', '344', '348', '355', '363', '367', '369', '366', '359', '352', '345',
                     '340',
                     '338', '337', '338', '339', '342', '345', '346', '347', '348', '346', '346', '344', '342', '341',
                     '340',
                     '340', '340', '341', '341', '341', '342', '342', '343', '343', '343', '343', '343', '343', '343',
                     '343',
                     '342', '342', '343', '345', '350', '358', '364', '368', '367', '362', '355', '347', '342', '338',
                     '336',
                     '336', '338', '340', '343', '345', '346', '348', '348', '347', '345', '343', '341', '340', '340',
                     '340',
                     '340', '340', '341', '341', '342', '343', '343', '344', '344', '343', '344', '344', '343', '342',
                     '343',
                     '342', '344', '347', '352', '361', '365', '368', '365', '359', '351', '345', '339', '336', '335',
                     '336',
                     '337', '340', '343', '346', '348', '348', '348', '347', '344', '343', '341', '340', '340', '340',
                     '339',
                     '340', '340', '341', '342', '343', '343', '343', '343', '343', '343', '343', '343', '343', '342',
                     '342',
                     '346', '350', '357', '363', '366', '366', '361', '355', '347', '342', '338', '336', '335', '337',
                     '339',
                     '342', '345', '348', '349', '349', '348', '346', '343', '342', '340', '339', '340', '339', '340',
                     '341',
                     '341', '342', '342', '343', '343', '344', '344', '344', '344', '344', '343', '344', '347', '353',
                     '360',
                     '365', '366', '364', '359', '352', '346', '340', '337', '334', '335', '337', '340', '345', '347',
                     '349',
                     '350', '349', '347', '345', '343', '341', '340', '340', '339', '340', '341', '341', '342', '343',
                     '343',
                     '344', '344', '344', '343', '344', '346', '351', '357', '363', '367', '366', '361', '355', '348',
                     '342',
                     '338', '336', '336', '338', '340', '343', '346', '348', '349', '348', '347', '345', '343', '341',
                     '341',
                     '340', '339', '340', '340', '341', '342', '343', '343', '344', '344', '344', '343', '343', '342',
                     '343',
                     '344', '348', '354', '361', '367', '367', '363', '358', '351', '345', '339', '337', '336', '337',
                     '340',
                     '341', '344', '346', '347', '348', '347', '345', '344', '343', '340', '340', '340', '340', '340',
                     '340',
                     '342', '341', '343', '344', '344', '343', '344', '343', '343', '343', '342', '342', '343', '345',
                     '351',
                     '358', '364', '366', '364', '360', '353', '347', '341', '338', '336', '337', '338', '340', '343',
                     '345',
                     '347', '348', '347', '346', '345', '342', '341', '340', '340', '340', '340', '342', '342', '342',
                     '343',
                     '344', '344', '344', '344', '344', '345', '344', '343', '343', '346', '349', '355', '360', '364',
                     '363',
                     '360', '354', '347', '342', '339', '337', '336', '338', '341', '343', '345', '346', '348', '346',
                     '346',
                     '344', '343', '341', '340', '341', '340', '340', '341', '341', '341', '342', '343', '343', '344',
                     '344',
                     '344', '343', '344', '343', '342', '343', '343', '346', '352', '359', '365', '367', '365', '361',
                     '355',
                     '349', '343', '340', '339', '338', '339', '341', '343', '344', '345', '346', '346', '345', '344',
                     '343',
                     '342', '340', '341', '340', '341', '341', '341', '342', '343', '343', '344', '343', '343', '343',
                     '343',
                     '343', '343', '343', '342', '342', '342', '342', '343', '346', '352', '359', '366', '370', '368',
                     '363',
                     '356', '349', '343', '339', '337', '337', '338', '340', '343', '346', '347', '348', '348', '347',
                     '346',
                     '345', '343', '342', '341', '342', '342', '341', '341', '342', '342', '343', '342', '343', '342',
                     '342',
                     '341', '342', '341', '342', '342', '343', '342', '342', '343', '347', '352', '361', '366', '369',
                     '367',
                     '361', '352', '346', '340', '337', '335', '336', '338', '341', '343', '346', '347', '348', '348',
                     '346',
                     '344', '342', '341', '340', '339', '339', '339', '340', '341', '342', '342', '343', '343', '344',
                     '344',
                     '343', '343', '342', '343', '342', '342', '342', '342', '342', '343', '346', '353', '360', '366',
                     '368',
                     '366', '361', '354', '347', '341', '338', '336', '336', '337', '340', '344', '347', '349', '348',
                     '348',
                     '347', '345', '343', '341', '339', '339', '340', '339', '340', '341', '342', '343', '343', '343',
                     '344',
                     '344', '344', '344', '343', '343', '343', '343', '346', '351', '359', '365', '366', '364', '360',
                     '352',
                     '346', '341', '338', '336', '336', '338', '340', '342', '345', '347', '348', '348', '347', '344',
                     '344',
                     '343', '341', '341', '340', '340', '341', '341', '341', '343', '344', '343']
        ser = serial.Serial("COM4", 115200, timeout=1)
        last_ten = []
        avg_bmps = []
        count = 0
        avg = 0
        ok = True
        now = time.perf_counter()
        i = 0
        while True:
            ser.write(heartrate[i].encode() + "\n".encode())
            data = int(heartrate[i])
            self.data_queue.put(data)
            if len(last_ten) >= 50:
                last_ten.pop(0)
            last_ten.append(data)
            avg = int(sum(last_ten) / len(last_ten))
            if ok and data >= avg + 3:
                then = now
                now = time.perf_counter()
                if int(60 / (now - then)) > 220:
                    continue
                count += 1
                print("heartbeat", count)
                if len(avg_bmps) >= 60:
                    avg_bmps.pop(0)
                avg_bmps.append(60 / (now - then))
                print(60 / (now - then))
                print("avg", sum(avg_bmps) / len(avg_bmps))
                ok = False
            elif not ok:
                now = time.perf_counter()
                if int(60 / (now - then)) < 220 and data <= avg + 3:
                    ok = True
            i += 1
            if i == len(heartrate):
                i = 0
            time.sleep(0.02)

    def record(self):
        data_ = []
        ser = serial.Serial("COM3", 115200, timeout=1)
        start = time.perf_counter()
        try:
            while time.perf_counter() - start < 30:
                response = ser.readline().decode("utf-8").strip()
                if response:
                    data = response.split(",")[-1]
                    data_.append(data)
            with open("data.txt", "wb") as f:
                pickle.dump(data_, f)
            print(data_)
        finally:
            ser.close()

    def get_bpm(self, serW):
        avg_bmps = []
        last_ten = []
        count = 0
        avg = 0
        ok = True
        now = time.perf_counter()
        ser = serial.Serial("COM3", 115200, timeout=1)
        try:
            while True:
                response = ser.readline().decode("utf-8").strip()
                if response:
                    data = int(response.split(",")[-1])
                    serW.write(response.encode() + b'\n')
                    self.data_write = data
                    self.data_queue.put(data)
                    if len(last_ten) >= 50:
                        last_ten.pop(0)
                    last_ten.append(data)
                    avg = int(sum(last_ten) / len(last_ten))
                    if ok and data >= avg + 3:
                        then = now
                        now = time.perf_counter()
                        if int(60 / (now - then)) > 220:
                            continue
                        count += 1
                        print("heartbeat", count)
                        if len(avg_bmps) >= 60:
                            avg_bmps.pop(0)
                        avg_bmps.append(60 / (now - then))
                        print(60 / (now - then))
                        print("avg", sum(avg_bmps) / len(avg_bmps))
                        ok = False
                    elif not ok:
                        now = time.perf_counter()
                        if int(60 / (now - then)) < 220 and data <= avg + 3:
                            ok = True
        finally:
            ser.close()

    def live_plot(self):
        x_data = []
        y_data = []

        fig, ax = plt.subplots()
        line, = ax.plot([], [], lw=2)

        x_count = 0
        x_max = 60
        ax.set_xlim(x_count, x_max)

        def update_plot(new_y):
            nonlocal x_data, y_data, x_count, x_max

            x_data.append(x_count)
            y_data.append(new_y)

            if len(x_data) > 60:
                x_data.pop(0)
                y_data.pop(0)

            line.set_data(x_data, y_data)

            x_count += 1
            if x_max - 10 == x_count:
                x_max += 1
            ax.set_xlim(x_max - 60, x_max)

            avg_y = np.mean(y_data)
            ax.set_ylim(avg_y - 15, avg_y + 25)

            fig.canvas.draw()
            plt.pause(0.00001)

        while True:
            new_y = self.data_queue.get()
            update_plot(new_y)

    def main(self):
        # Start the mock heartrate function in a separate thread
        mock_bpm_thread = threading.Thread(target=self.mock_heartrate)
        mock_bpm_thread.start()

        # Start the live plot function in a separate thread
        live_plot_thread = threading.Thread(target=self.live_plot)
        live_plot_thread.start()

        # Start the Tkinter mainloop in the main thread
        self.root.mainloop()


if __name__ == "__main__":
    desktop_app = Desktop()
    desktop_app.main()
